// Generated by CoffeeScript 2.5.1
(function() {
  define(['cmx/entity', 'cmx/gizmos/drawing_gizmo'], function(Entity, DrawingGizmo) {
    var Drawing;
    return Drawing = class Drawing extends Entity {
      constructor(scene, drawlist = []) {
        // HACK: find proper way how to do deep clone
        super();
        this.drawlist = drawlist.map(function(call) {
          return call.map(function(x) {
            return _(x).clone();
          });
        });
        super(scene);
        this.drawingBones = this.skelet.addBones([
          [
            'HNDL',
            0,
            0,
            "h" // handle
          ]
        ]);
      }

      buildGizmo(root) {
        return this.gizmo = new DrawingGizmo(this, root);
      }

      setPose(pose) {
        return this.skelet.setPose(pose, this.drawingBones);
      }

      getPose() {
        return this.skelet.getPose(this.drawingBones);
      }

      drawLayer(layer) {
        var i, item, itemsToBeRendered, len;
        super.drawLayer();
        itemsToBeRendered = _(this.drawlist).filter(function(item) {
          return layer === item[0];
        });
        if (!itemsToBeRendered.length) {
          return;
        }
        this.openFrame((() => {
          return this.prepareFrame(this.skelet.bone('HNDL'));
        }));
        for (i = 0, len = itemsToBeRendered.length; i < len; i++) {
          item = itemsToBeRendered[i];
          this.scene.renderer[item[1]].apply(this.scene.renderer, item.slice(2));
        }
        return this.closeFrame();
      }

    };
  });

}).call(this);
